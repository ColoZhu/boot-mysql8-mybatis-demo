<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.DemoMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Demo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_timestamp" jdbcType="TIMESTAMP" property="createTimestamp" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="year" jdbcType="OTHER" property="year" />
    <result column="time" jdbcType="TIME" property="time" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, create_timestamp, create_date, create_datetime, `year`, `time`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from demo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from demo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo.entity.Demo" useGeneratedKeys="true">
    insert into demo (`name`, create_timestamp, create_date, 
      create_datetime, `year`, `time`
      )
    values (#{name,jdbcType=VARCHAR}, #{createTimestamp,jdbcType=TIMESTAMP}, #{createDate,jdbcType=DATE}, 
      #{createDatetime,jdbcType=TIMESTAMP}, #{year,jdbcType=OTHER}, #{time,jdbcType=TIME}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo.entity.Demo" useGeneratedKeys="true">
    insert into demo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="createTimestamp != null">
        create_timestamp,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createDatetime != null">
        create_datetime,
      </if>
      <if test="year != null">
        `year`,
      </if>
      <if test="time != null">
        `time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTimestamp != null">
        #{createTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="createDatetime != null">
        #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="year != null">
        #{year,jdbcType=OTHER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIME},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Demo">
    update demo
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTimestamp != null">
        create_timestamp = #{createTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="year != null">
        `year` = #{year,jdbcType=OTHER},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIME},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Demo">
    update demo
    set `name` = #{name,jdbcType=VARCHAR},
      create_timestamp = #{createTimestamp,jdbcType=TIMESTAMP},
      create_date = #{createDate,jdbcType=DATE},
      create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      `year` = #{year,jdbcType=OTHER},
      `time` = #{time,jdbcType=TIME}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>